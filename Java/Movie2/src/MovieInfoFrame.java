
import java.sql.Connection;

import java.sql.PreparedStatement;
import java.util.Vector;

/*
 * MovieInfoFrame.java
 *
 * Created on 2016年3月29日, 上午6:42
 */
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author  Administrator
 */
public class MovieInfoFrame extends javax.swing.JFrame {
    
    /** Creates new form MovieInfoFrame */
    public MovieInfoFrame() {
        initComponents();
         this.clearJTable();
         this.initJTable();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableInfo = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jdfMovieName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jdfDirector = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jdfMovieType = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jdfStardom = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jdfRegion = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jdfShowTime = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jdfDescription = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jdfPrice = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jdfMovieID = new javax.swing.JTextField();
        jbAdd = new javax.swing.JButton();
        jbDelete = new javax.swing.JButton();
        jbClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "电影ID", "电影名称", "导演", "电影类型", "主演", "片源", "上映时间", "背景", "图片", "价钱"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableInfoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableInfo);

        jLabel1.setText("电影名称：");

        jLabel2.setText("电影导演：");

        jLabel3.setText("电影类型：");

        jLabel4.setText("电影主演：");

        jLabel5.setText("电影片源：");

        jLabel6.setText("上映时间：");

        jLabel7.setText("电影背景：");

        jLabel8.setText("电影价钱：");

        jButton2.setText("保存");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("退出");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel9.setText("电影ID：");

        jdfMovieID.setEditable(false);

        jbAdd.setText("添加");
        jbAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAddActionPerformed(evt);
            }
        });

        jbDelete.setText("删除");
        jbDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDeleteActionPerformed(evt);
            }
        });

        jbClear.setText("清屏");
        jbClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jdfMovieType))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jdfDirector))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jdfMovieID)
                                    .addComponent(jdfMovieName, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jdfStardom, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                            .addGap(38, 38, 38)
                            .addComponent(jLabel8))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jbAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(19, 19, 19))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbClear))
                    .addComponent(jdfPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                    .addComponent(jdfDescription, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                    .addComponent(jdfShowTime, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                    .addComponent(jdfRegion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE))
                .addGap(43, 43, 43))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jdfMovieID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jdfMovieName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jdfRegion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jdfDirector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jdfShowTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jdfMovieType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jdfDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8)
                    .addComponent(jdfPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jdfStardom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton2)
                    .addComponent(jbAdd)
                    .addComponent(jbDelete)
                    .addComponent(jbClear))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableInfoMouseClicked
        // TODO add your handling code here:
        int selectRow=this.jTableInfo.getSelectedRow();
        DefaultTableModel dtm=(DefaultTableModel) this.jTableInfo.getModel();
        this.jdfMovieID.setText(String.valueOf( dtm.getValueAt(selectRow,0 )));
        this.jdfMovieName.setText((String) dtm.getValueAt(selectRow,1 ));
        this.jdfDirector.setText((String) dtm.getValueAt(selectRow,2 ));
        this.jdfMovieType.setText((String) dtm.getValueAt(selectRow,3 ));
        this.jdfStardom.setText((String) dtm.getValueAt(selectRow,4 ));
        this.jdfRegion.setText((String) dtm.getValueAt(selectRow,5 ));
        this.jdfShowTime.setText((String) dtm.getValueAt(selectRow,6 ));
        this.jdfDescription.setText((String) dtm.getValueAt(selectRow,7 ));
        this.jdfPrice.setText((String) dtm.getValueAt(selectRow,9 ));
    }//GEN-LAST:event_jTableInfoMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int id=Integer.parseInt(this.jdfMovieID.getText().trim());
        String name=this.jdfMovieName.getText().trim();
        String director=this.jdfDirector.getText().trim();
        int type=Integer.parseInt(this.jdfMovieType.getText().trim());
        String stardom=this.jdfStardom.getText().trim();
        String region=this.jdfRegion.getText().trim();
        String showtime=this.jdfShowTime.getText().trim();
        String description=this.jdfDescription.getText().trim();
        Double price=Double.parseDouble(this.jdfPrice.getText().trim());
        MovieInfo info=new MovieInfo();
        info.setMovieID(id);
        info.setMovieName(name);
        info.setDirector(director);
        info.setTypeID(type);
        info.setStardom(stardom);
        info.setRegion(region);
        info.setShowTime(showtime);
        info.setDescription(description);
        info.setPrice(price);
        int i=this.editMovie(info);
        if(i>0){
            JOptionPane.showMessageDialog(null,"修改成功！");
            
        }else{
            JOptionPane.showMessageDialog(null,"修改失败！");
        }
        this.clearJTable();
        this.initJTable();
        this.resetMovie();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jbAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAddActionPerformed
        // TODO add your handling code here:
        
        this.AddMovie();
        this.clearJTable();
        this.initJTable();
        this.resetMovie();
        
}//GEN-LAST:event_jbAddActionPerformed

    private void jbClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbClearActionPerformed
        // TODO add your handling code here:
        this.clearJTable();
        this.initJTable();
        this.resetMovie();
    }//GEN-LAST:event_jbClearActionPerformed

    private void jbDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDeleteActionPerformed
        // TODO add your handling code here:
        this.DeleteMovie();
        this.clearJTable();
        this.initJTable();
        this.resetMovie();
    }//GEN-LAST:event_jbDeleteActionPerformed
    
   public void initJTable(){
        MovieInfo mi= new MovieInfo();
        Vector vector=mi.getAllMovies();
        DefaultTableModel dtm=(DefaultTableModel) this.jTableInfo.getModel();
        for(int i =0; i < vector.size();i++){
            dtm.addRow((Vector)vector.get(i));
        }
    }
   public int TypeName(MovieType type){
       int i = 0;
       Connection con = null;
       PreparedStatement pstmt=null;
       String sql="slect typename from type where typeid=?";
       try{
           con=MovieDB.getCon();
           pstmt=con.prepareStatement(sql);
           pstmt.setInt(1,type.getTypeid());
           i=pstmt.executeUpdate();
       }catch(Exception ex){
           ex.printStackTrace();
       }finally{
           try{
               pstmt.close();
               con.close();
           }catch(Exception ex){
               ex.printStackTrace();
           }
       }
       return i;

   }
   public int editMovie(MovieInfo info){
       int i=0;
       Connection con=null;
       PreparedStatement pstmt=null;
       String sql="update movies set movieName=?,director=?,typeID=?,stardom=?,region=?,showtime=?,description=?,price=? where movieID=?";
       try{
           con=MovieDB.getCon();
           pstmt=con.prepareStatement(sql);
           pstmt.setString(1,info.getMovieName());
           pstmt.setString(2,info.getDirector());
           pstmt.setInt(3,info.getTypeID());
           pstmt.setString(4,info.getStardom());
           pstmt.setString(5,info.getRegion());
           pstmt.setString(6,info.getShowTime());
           pstmt.setString(7,info.getDescription());
           pstmt.setDouble(8,info.getPrice());     
           pstmt.setInt(9,info.getMovieID());      
           i=pstmt.executeUpdate();
       }catch(Exception ex){
           ex.printStackTrace();
       }finally{
           try{
               pstmt.close();
               con.close();
           }catch(Exception ex){
               ex.printStackTrace();
           }
       }
       return i;
   }
   public void clearJTable(){
       DefaultTableModel dtm=(DefaultTableModel) this.jTableInfo.getModel();
       int rowCount=dtm.getRowCount();
       for(int i=0;i<rowCount;i++){
           dtm.removeRow(0);
       }
   }
   public void resetMovie(){
      this.jdfMovieID.setText("");
      this.jdfMovieName.setText("");
      this.jdfDirector.setText("");
      this.jdfMovieType.setText("");
      this.jdfDescription.setText("");
      this.jdfPrice.setText("");
      this.jdfRegion.setText("");
      this.jdfShowTime.setText("");
      this.jdfStardom.setText("");
   }
   public void AddMovie(){
        int i = 0;
        MovieInfo info=new MovieInfo();
        String name=this.jdfMovieName.getText().trim();
        String director=this.jdfDirector.getText().trim();
        int typeid=Integer.parseInt(this.jdfMovieType.getText().trim());
        String stardom=this.jdfStardom.getText().trim();
        String region=this.jdfRegion.getText().trim();
        String showtime=this.jdfShowTime.getText().trim();
        String description=this.jdfDescription.getText().trim();
        Double price=Double.parseDouble(this.jdfPrice.getText().trim());
        info.setMovieName(name);
        info.setDirector(director);
        info.setTypeID(typeid);
        info.setStardom(stardom);
        info.setRegion(region);
        info.setShowTime(showtime);
        info.setDescription(description);
        info.setPrice(price);
        
        Connection con=null;
        PreparedStatement pstmt=null;
        String sql="insert into movies values(?,?,?,?,?,?,?,?,?)";
        
        try{
            con=MovieDB.getCon();
            pstmt=con.prepareStatement(sql);
            pstmt.setString(1,info.getMovieName());
            pstmt.setString(2,info.getDirector());
            pstmt.setInt(3,info.getTypeID());
            pstmt.setString(4,info.getStardom());
            pstmt.setString(5,info.getRegion());
            pstmt.setString(6,info.getShowTime());
            pstmt.setString(7,info.getDescription());
            pstmt.setString(8,null);
            pstmt.setDouble(9,info.getPrice());
            
            
            i=pstmt.executeUpdate();
        }catch(Exception ex){
            ex.printStackTrace();
        }finally{
            try{
                pstmt.close();
                con.close();
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
        if(i>0){
            JOptionPane.showMessageDialog(null, "添加成功！");
        }else
        {
            JOptionPane.showMessageDialog(null, "添加失败！");
        }
   }
   public void DeleteMovie(){
        int i = 0;
        MovieInfo info=new MovieInfo();
        int movieID=Integer.parseInt(this.jdfMovieID.getText().trim());
        info.setMovieID(movieID);
             
        Connection con=null;
        PreparedStatement pstmt=null;
        String sql="Delete from movies where movieID = ?";
        
        try{
            con=MovieDB.getCon();
            pstmt=con.prepareStatement(sql);          
            pstmt.setInt(1,info.getMovieID());      
            
            i=pstmt.executeUpdate();
        }catch(Exception ex){
            ex.printStackTrace();
        }finally{
            try{
                pstmt.close();
                con.close();
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
        if(i>0){
            JOptionPane.showMessageDialog(null, "删除成功！");
        }else
        {
            JOptionPane.showMessageDialog(null, "删除失败！");
        }
   }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MovieInfoFrame().setVisible(true);
            }
        });
    }
 
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableInfo;
    private javax.swing.JButton jbAdd;
    private javax.swing.JButton jbClear;
    private javax.swing.JButton jbDelete;
    private javax.swing.JTextField jdfDescription;
    private javax.swing.JTextField jdfDirector;
    private javax.swing.JTextField jdfMovieID;
    private javax.swing.JTextField jdfMovieName;
    private javax.swing.JTextField jdfMovieType;
    private javax.swing.JTextField jdfPrice;
    private javax.swing.JTextField jdfRegion;
    private javax.swing.JTextField jdfShowTime;
    private javax.swing.JTextField jdfStardom;
    // End of variables declaration//GEN-END:variables
    
}
